@AbapCatalog.sqlViewName: 'ZATS00IUCUST'
@AbapCatalog.compiler.compareFilter: true
@AbapCatalog.preserveKey: true
@AccessControl.authorizationCheck: #CHECK
@EndUserText.label: 'Unmanaged Scenario Base Later- Customer Data'
define view ZATS_00_I_U_CUSTOMER as select from /dmo/customer
association [1] to I_Country as _Country
    on $projection.country_code = _Country.Country {
    ///dmo/customer
    key customer_id as CustomerID,
    first_name as FirstName,
    last_name as LastName,
    title as Title,
    street as Street,
    postal_code as PostalCode,
    city as City,
    country_code as CountryCd,
    phone_number as PhoneNo,
    email_address as EmailAddr,
    _Country // Make association public
}


@AbapCatalog.sqlViewName: 'ZATS00IUAGEN'
@AbapCatalog.compiler.compareFilter: true
@AbapCatalog.preserveKey: true
@AccessControl.authorizationCheck: #CHECK
@EndUserText.label: 'Unmanaged Scenario Base Later- Agency Data'
define view ZATS_00_I_U_agency as select from /dmo/agency
association [1] to I_Country as _Country
    on $projection.country_code = _Country.Country {
    ///dmo/customer
    ///dmo/agency
    key agency_id as AgencyId,
    name as AgencyName,
    street as AStreet,
    postal_code as APostalCode,
    city as ACity,
    country_code as ACountry,
    phone_number as APhone,
    email_address as AEmailAddress,
    web_address as AWebAddress,
    _Country // Make association public
}


@AbapCatalog.sqlViewName: 'ZATS00CUTRAVEL'
@AbapCatalog.compiler.compareFilter: true
@AbapCatalog.preserveKey: true
@AccessControl.authorizationCheck: #CHECK
@EndUserText.label: 'Unmanaged Scenario Projection Layer - Consumption Travel'
define view ZATS_00_C_U_TRAVEL as select from /dmo/travel as Travel
association [1] to ZATS_00_I_U_agency as _Agency
    on $projection.AgencyId = _Agency.AgencyId
association [1] to ZATS_00_I_U_CUSTOMER as _Customer
    on $projection.CustomerId = _Customer.CustomerID
association [1] to I_Currency as _Currency
    on $projection.CurrencyCode = _Currency.Currency {
    //Travel
    key travel_id as TravelId,
    agency_id as AgencyId,
    customer_id as CustomerId,
    begin_date as BeginDate,
    end_date as EndDate,
    booking_fee as BookingFee,
    total_price as TotalPrice,
    currency_code as CurrencyCode,
    description as Description,
    status as Status,
    _Agency,
    _Customer,
    _Currency
}


@EndUserText.label: 'travel service def for unmanaged scenario'
define service Zats_00_sd_u_travel {
  expose ZATS_00_C_U_TRAVEL as Travel;
  expose ZATS_00_I_U_CUSTOMER as Customer;
  expose ZATS_00_I_U_agency as TravelAgency;
  expose I_Currency;
  expose I_Country;
}

